name: Build and Upload

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download curl-android library.zip
        run: |
          curl -sL "https://api.github.com/repos/vvb2060/curl-android/actions/runs" | jq -r '.workflow_runs[0].artifacts_url' | xargs -I {} curl -sL -H "Accept: application/vnd.github.v3+json" {} | jq -r '.[0].archive_download_url' | xargs -I {} curl -sL -o curl-android-library.zip {}

      - name: Download BoringSSL_Android library.zip
        run: |
          curl -sL "https://api.github.com/repos/vvb2060/BoringSSL_Android/actions/runs" | jq -r '.workflow_runs[0].artifacts_url' | xargs -I {} curl -sL -H "Accept: application/vnd.github.v3+json" {} | jq -r '.[0].archive_download_url' | xargs -I {} curl -sL -o BoringSSL-android-library.zip {}

      - name: Extract curl-android library.zip
        run: |
          mkdir curl-android
          unzip -q curl-android-library.zip -d curl-android
          
      - name: Extract BoringSSL_Android library.zip
        run: |
          mkdir BoringSSL-android
          unzip -q BoringSSL-android-library.zip -d BoringSSL-android

      - name: Extract .aar files and get version number
        run: |
          curl_aar=$(find curl-android -name "*.aar" -and -name "*lto*" | head -n 1)
          boring_ssl_aar=$(find BoringSSL-android -name "*.aar" -and -name "*lto*" | head -n 1)

          curl_version=$(basename "$curl_aar" | sed -E 's/curl-([^ ]+)-lto\.aar/\1/')
          echo "curl version: $curl_version"
          echo "curl_version=$curl_version" >> $GITHUB_ENV

      - name: Generate CMakeLists.txt
        run: |
          mkdir -p merged
          echo "cmake_minimum_required(VERSION 3.27)" > merged/CMakeLists.txt
          echo "" >> merged/CMakeLists.txt
          echo "project(curl_android)" >> merged/CMakeLists.txt
          echo "" >> merged/CMakeLists.txt
          echo "add_library(curl_android INTERFACE)" >> merged/CMakeLists.txt
          echo "add_library(curl::curl_static ALIAS curl_android)" >> merged/CMakeLists.txt
          echo "" >> merged/CMakeLists.txt
          echo "function(add_imported_library lib_name lib_path)" >> merged/CMakeLists.txt
          echo "    add_library(\${lib_name} STATIC IMPORTED)" >> merged/CMakeLists.txt
          echo "    set_target_properties(\${lib_name} PROPERTIES IMPORTED_LOCATION \${lib_path})" >> merged/CMakeLists.txt
          echo "endfunction()" >> merged/CMakeLists.txt
          echo "" >> merged/CMakeLists.txt
          echo "set(LIBS curl nghttp2 nghttp3 ngtcp2 ngtcp2_crypto crypto ssl)" >> merged/CMakeLists.txt
          echo "" >> merged/CMakeLists.txt
          echo "foreach (lib \${LIBS})" >> merged/CMakeLists.txt
          echo "    file(GLOB LIB_PATH \"\${CMAKE_CURRENT_SOURCE_DIR}/modules/\${lib}_static/libs/android.*/*.a\")" >> merged/CMakeLists.txt
          echo "    if(LIB_PATH)" >> merged/CMakeLists.txt
          echo "        add_imported_library(\${lib} \${LIB_PATH})" >> merged/CMakeLists.txt
          echo "        target_include_directories(curl_android INTERFACE \${CMAKE_CURRENT_SOURCE_DIR}/modules/\${lib}_static/include)" >> merged/CMakeLists.txt
          echo "    endif()" >> merged/CMakeLists.txt
          echo "endforeach ()" >> merged/CMakeLists.txt
          echo "" >> merged/CMakeLists.txt
          echo "target_link_libraries(curl_android INTERFACE" >> merged/CMakeLists.txt
          echo "        curl" >> merged/CMakeLists.txt
          echo "        nghttp2" >> merged/CMakeLists.txt
          echo "        nghttp3" >> merged/CMakeLists.txt
          echo "        ngtcp2" >> merged/CMakeLists.txt
          echo "        ngtcp2_crypto" >> merged/CMakeLists.txt
          echo "        crypto" >> merged/CMakeLists.txt
          echo "        ssl" >> merged/CMakeLists.txt
          echo "        z)" >> merged/CMakeLists.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: merged-cmake
          path: merged
